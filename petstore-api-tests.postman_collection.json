{
	"info": {
		"_postman_id": "0a10875a-5d6c-4b29-b0df-a4be7f0d1e56",
		"name": "petstore-api-tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35362150",
		"_collection_link": "https://t66666-6552.postman.co/workspace/PetStore-API~23cee80c-70b9-4696-b8bc-9ea6b1d49017/collection/35362150-0a10875a-5d6c-4b29-b0df-a4be7f0d1e56?action=share&source=collection_link&creator=35362150"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "ID-01",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"let petId = response.id;",
									"pm.collectionVariables.set(\"petId\", petId);",
									"",
									"pm.test(\"JSON schema validation\", function () {",
									"    let schemaPet = {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"            \"id\": {",
									"                \"type\": \"integer\"",
									"            },",
									"            \"category\": {",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                    \"id\": {",
									"                        \"type\": \"integer\"",
									"                    },",
									"                    \"name\": {",
									"                        \"type\": \"string\"",
									"                    }",
									"                },",
									"                \"required\": [\"id\", \"name\"]",
									"            },",
									"            \"name\": {",
									"                \"type\": \"string\",",
									"                \"example\": \"doggie\"",
									"            },",
									"            \"photoUrls\": {",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                    \"type\": \"string\"",
									"                },",
									"                \"minItems\": 1",
									"            },",
									"            \"tags\": {",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"id\": {",
									"                            \"type\": \"integer\"",
									"                        },",
									"                        \"name\": {",
									"                            \"type\": \"string\"",
									"                        }",
									"                    },",
									"                    \"required\": [\"id\", \"name\"]",
									"                }",
									"            },",
									"            \"status\": {",
									"                \"type\": \"string\",",
									"                \"enum\": [\"available\", \"pending\", \"sold\"]",
									"            }",
									"        },",
									"        \"required\": [\"name\", \"photoUrls\"]",
									"    };",
									"    pm.response.to.have.jsonSchema(schemaPet);",
									"});",
									"",
									"pm.test(\"Checking values in request headers\", function () {",
									"    pm.expect(pm.request.headers.get(\"accept\")).to.eql(\"application/json\");",
									"    pm.expect(pm.request.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    pm.expect(pm.request.headers.get(\"Cache-Control\")).to.eql(\"no-cache\");",
									"    pm.expect(pm.request.headers.get(\"Host\")).to.eql(\"petstore.swagger.io\");",
									"    pm.expect(pm.request.headers.get(\"Connection\")).to.eql(\"keep-alive\");",
									"});",
									"",
									"pm.test(\"Checking values in response headers\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    pm.expect(pm.response.headers.get(\"Connection\")).to.eql(\"keep-alive\");",
									"    pm.expect(pm.response.headers.get(\"Access-Control-Allow-Origin\")).to.eql(\"*\");",
									"    pm.expect(pm.response.headers.get(\"Access-Control-Allow-Methods\")).to.eql(\"GET, POST, DELETE, PUT\");",
									"    pm.expect(pm.response.headers.get(\"Access-Control-Allow-Headers\")).to.eql(\"Content-Type, api_key, Authorization\");",
									"    pm.expect(pm.response.headers.get(\"Server\")).to.eql(\"Jetty(9.2.9.v20150224)\");",
									"});",
									"",
									"pm.test(\"Status code 200 or 405\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 405]);",
									"});",
									"",
									"pm.test(\"Checking the error message\", function () {",
									"    if (pm.response.code == 405) {",
									"        pm.expect(response.massage).to.eql(\"Invalid input\")",
									"    };",
									"});",
									"",
									"pm.test(\"Request time check\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"let requestBody = pm.request.body.raw",
									"requestBody = JSON.parse(requestBody);",
									"let responseBody = pm.response.json();",
									"pm.test(\"Comparison of data from the request body in the response body\", function(){",
									"    pm.expect(requestBody.id).to.eql(responseBody.id);",
									"    pm.expect(requestBody.category.id).to.eql(responseBody.category.id);",
									"    pm.expect(requestBody.category.name).to.eql(responseBody.category.name);",
									"    pm.expect(requestBody.name).to.eql(responseBody.name);",
									"    pm.expect(requestBody.photoUrls).to.eql(responseBody.photoUrls);",
									"    pm.expect(requestBody.tags).to.eql(responseBody.tags);",
									"    pm.expect(requestBody.status).to.eql(responseBody.status);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 923021403201,\n  \"category\": {\n    \"id\": 10,\n    \"name\": \"Dogs\"\n  },\n  \"name\": \"Yani\",\n  \"photoUrls\": [\n    \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.pexels.com%2Fsearch%2Fdog%2F&psig=AOvVaw2y2phPpqANrB615QJQ2GnW&ust=1761840855782000&source=images&cd=vfe&opi=89978449&ved=0CBIQjRxqFwoTCNDw1-TmyZADFQAAAAAdAAAAABAE\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 11,\n      \"name\": \"puppies\"\n    }\n  ],\n  \"status\": \"available\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://petstore.swagger.io/v2/pet' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"id\": 0,\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"string\"\n  },\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\"\n    }\n  ],\n  \"status\": \"available\"\n}'"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": ""
		},
		{
			"key": "petId",
			"value": ""
		}
	]
}